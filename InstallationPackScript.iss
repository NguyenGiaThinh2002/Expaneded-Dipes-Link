; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Dipes-Link"
#define MyAppVersion "1.0.0.2 Build 250204"
#define MyAppPublisher "Rynan Technologies"
#define MyAppURL "https://rynantech.com/"
#define MyAppExeName "DipesLink.exe"
#define MyAppAssocName MyAppName + " File"
#define MyAppAssocExt ".myp"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt

//Delete old folder first (ProgramData/R-Link)
[Code]
procedure DeleteOldFolder(const FolderPath: string);
begin
  if DirExists(FolderPath) then
  begin
    if DelTree(FolderPath, True, True, True) then
    begin
      Log('Old folder deleted successfully.');
    end
    else
    begin
      Log('Failed to delete old folder.');
    end;
  end
  else
  begin
    Log('Old folder does not exist.');
  end;
end;

function InitializeSetup(): Boolean;
var
  OldFolderPath_Settings: string;   //C:\ProgramData\R-Link\Settings
var
  OldFolderPath_Accounts: string;   //C:\ProgramData\R-Link\Accounts
begin
  OldFolderPath_Settings := ExpandConstant('{commonappdata}\DP-Link\Settings');
  OldFolderPath_Accounts := ExpandConstant('{commonappdata}\DP-Link\Accounts');
  // Call the function to delete the old folder
  DeleteOldFolder(OldFolderPath_Settings);
  DeleteOldFolder(OldFolderPath_Accounts);
  // Proceed with the installation
  Result := True;
end;
// End delete old folder

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{5A12C1C5-449E-442D-8924-79DA126D9948}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
ChangesAssociations=yes
DisableProgramGroupPage=yes
UninstallDisplayIcon={app}\icon.ico
UninstallDisplayName={#MyAppName}
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
PrivilegesRequired=admin
PrivilegesRequiredOverridesAllowed=dialog
OutputDir=OutputExe\
OutputBaseFilename=Dipes_Link_Setup64_{#MyAppVersion}
SetupIconFile=icon.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "Output\Release\DipesLink\Release\net6.0-windows\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "Output\Release\DipesLink\Release\net6.0-windows\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs ;Excludes: "*.pdb";
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

//Add file icon.ico into the installation directory
Source: "icon.ico"; DestDir: "{app}"; Flags: ignoreversion       

[Dirs]
Name: "{commonappdata}\DP-Link"; Permissions: users-modify

[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""
Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: ".myp"; ValueData: ""

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}" ;IconFilename: "{app}\icon.ico"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon;IconFilename: "{app}\icon.ico"
Name: "{group}\Uninstall {#MyAppName}"; Filename: "{uninstallexe}"; IconFilename: "{app}\icon.ico"

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

